// examples/all_objects.millcrum - sample showing every basic object and operation

// create the tool options
// units: mm or inch
// diameter: tool diameter in mm or inch
// passDepth: depth to cut per pass in mm or inch, if a cut operation has a deeper depth then multiple passes will occur
// step: how far the bit should step for pocket operations, between 0 and 1 (full step)
// rapid: how fast the tool should move when it is not cutting
// plunge: how fast the tool should move down on the Z axis when cutting
// cut: how fast the tool should move on the X and Y axes when cutting
// zClearance: how high above the surface the tool should be when not cutting
// returnHome: should the tool return to 0,0,0 after finishing, true or false
var tool = {units:'mm',diameter:6.35,passDepth:4,step:1,rapid:2000,plunge:100,cut:600,zClearance:5,returnHome:true};

// setup a new Millcrum object with that tool
var mc = new Millcrum(tool);

// set the surface dimensions for the viewer
mc.surface(1000,600);

// create a 50mm x 50mm square
// the name is not required, but it will display on the canvas and in the gcode comments
var rect = {type:'rect',xLen:50,yLen:50,name:'50mm square'};

// cut the square with an pocket path and position it at 200,100 and a depth of 4

// the 5th argument to mc.cut is an object of options
// {useConventionalCut:true} will use a (CW) conventional cut instead of the default (CCW) climb cut
// you can also use tabs with
// {tabs: true, tabHeight: 2, tabSpacing: tool.diameter*5, tabWidth: tool.diameter*2}
// where tabHeight (default 2) represents the height of the tab from the bottom of the cut
// tabSpacing (default tool.diameter*5) represents the distance between each tab
// and tabWidth (default tool.diameter*2) represents the width of each tab
// tabs are used to hold down material while it is being cut
mc.cut('pocket', rect, 4, [200,100], {useConventionalCut:true});

// YOU CAN CLICK ON THE OBJECTS IN MILLCRUM TO SEE THEIR PATH DIRECTION AND CUT INFO

// create a rectangle of 80mm x 80mm with a corner radius of 4mm
var rectCornerRadius = {type:'rect',xLen:80,yLen:80,cornerRadius:4};

// cut the rectangle with an inside cut, position it at 20,300
// depth 4
mc.cut('inside', rectCornerRadius, 4, [20,300]);

// create a polygon of any shape
// polygons are drawn starting at the first point with each point having a line
// drawn to it in a CCW direction
var polygon = {type:'polygon',points:[
	[0,0],
	[100,0],
	[150,50],
	[100,100],
	[0,100],
]};

// cut the polygon with an outside cut and position it at 10,10
// depth 6, this will be 2 passes with a tool passDepth of 4
mc.cut('outside', polygon, 6, [10,10]);

// create a circle with a radius of 10
var circle = {type:'circle',r:10};

// cut the circle with an inside cut and position it at 200,200
// depth 4
mc.cut('inside', circle, 4, [200,200]);

// a bigger circle
var c = {type:'circle',r:100};

// cut it with pocket at position 300,450
// depth 4
mc.cut('pocket', c, 4, [300,450]);

// degrees for arcs
//
//      90
//       |
// 180 ----- 0
//       |
//      270

var polygonWithArc = {type:'polygon',points:[
	[0,0],
	[100,0],
	{type:'arc',r:50,startDeg:270,endDeg:90}, // arc that goes 180 degrees from 10,0 to 10,10
	// you have to make sure that the end point of the arc ends up at the next point of the polygon
	// a 180 degree arc starting at 10,0 (remember we always draw paths CCW) would end at 10,10
	// with a radius of 5
	[0,100]
]};
mc.cut('outside', polygonWithArc, 4, [280,50]);

// get the gcode
mc.get();
